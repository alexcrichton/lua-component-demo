name: CI
on: [pull_request, push]

# Cancel any in-flight jobs for the same PR/branch so there's only one active
# at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: true
    - run: rustup update nightly-2025-10-02 && rustup default nightly-2025-10-02
    - run: rustup target add wasm32-wasip2
    - run: |
        curl -L -o wasi-sdk.tar.gz https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-27/wasi-sdk-27.0-x86_64-linux.tar.gz
        tar xf wasi-sdk.tar.gz
        echo "WASI_SDK_PATH=`pwd`/wasi-sdk-27.0-x86_64-linux" >> $GITHUB_ENV
      working-directory: ${{ runner.tool_cache }}
    - name: Setup `wasmtime`
      uses: bytecodealliance/actions/wasmtime/setup@v1
      with:
        version: "v37.0.1"
    - run: cargo run ./test/wit -o test/lua.wasm
    - run: wasmtime -Sinherit-network,allow-ip-name-lookup --dir test::. -W exceptions --invoke 'run("a")' test/lua.wasm
    - run: cargo run --release ./test/wit -o test/lua.wasm
    - run: wasmtime -Sinherit-network,allow-ip-name-lookup --dir test::. -W exceptions --invoke 'run("a")' test/lua.wasm
  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      run: rustup update stable && rustup default stable && rustup component add rustfmt
    - name: Format source code
      run: cargo fmt -- --check
